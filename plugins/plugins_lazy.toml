[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap <silent> <Leader>r <Plug>(quickrun)
    let g:quickrun_config = get(g:, 'quickrun_config', {})
    let g:quickrun_config._ = {
          \ 'runner'    : 'vimproc',
          \ 'runner/vimproc/updatetime' : 60,
          \ 'outputter' : 'error',
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error'   : 'quickfix',
          \ 'outputter/buffer/split'  : ':rightbelow 8sp',
          \ 'outputter/buffer/close_on_empty' : 1,
          \ }
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_add = 'let g:deoplete#enable_at_startup = 1'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_add = '''
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  let g:neosnippet#snippets_directory = '.config/nvim/snippets/,.config/nvim/repo/github.com/Shougo/neosnippet-snippets/neosnippets'
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'

#golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
set rtp+=/home/suzuki/src/github.com/nsf/gocode/vim
'''
